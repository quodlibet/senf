matrix:
  include:
    - os: linux
      dist: xenial
      language: python
      python: "2.7"
      env: PYARGS="-R"
    - os: linux
      dist: xenial
      language: python
      python: "3.4"
      env: PYARGS="-R -bb"
    - os: linux
      dist: xenial
      language: python
      python: "3.5"
      env: PYARGS="-R -bb"
    - os: linux
      dist: xenial
      language: python
      python: "3.6"
      env: PYARGS="-R -bb"
    - os: linux
      dist: xenial
      sudo: required
      language: python
      python: "3.7"
      env: PYARGS="-R -bb"
    - os: linux
      dist: xenial
      language: python
      python: "3.8"
      env: PYARGS="-R -bb"
    - os: linux
      dist: xenial
      language: python
      python: "pypy"
      env: PYARGS="-R"
    - os: linux
      dist: xenial
      language: python
      python: "pypy3"
      env: PYARGS="-R -bb"
    - os: osx
      osx_image: xcode9.4
      language: generic
      env: PYVER="3" PYARGS="-R -bb"
    - os: osx
      osx_image: xcode9.4
      language: generic
      env: PYVER="2" PYARGS="-R"

install:
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew update; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ] && [ "$PYVER" == "3" ]; then brew install python || brew upgrade python; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ] && [ "$PYVER" == "3" ]; then python3 -m pip install virtualenv; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ] && [ "$PYVER" == "3" ]; then virtualenv venv -p python3; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ] && [ "$PYVER" == "2" ]; then brew install python@2 || brew upgrade python@2; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ] && [ "$PYVER" == "2" ]; then python2 -m pip install virtualenv; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ] && [ "$PYVER" == "2" ]; then virtualenv venv -p python2; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then source venv/bin/activate; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ] || [ "$TRAVIS_OS_NAME" == "linux" ]; then python -m pip install --upgrade setuptools; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ] || [ "$TRAVIS_OS_NAME" == "linux" ]; then python -m pip install --upgrade pytest hypothesis flake8 coverage codecov attrs; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]  && [ "$PYVER" == "3" ] && [ "$TRAVIS_PYTHON_VERSION" != "pypy3" ]; then python -m pip install --upgrade mypy; fi

script:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then export LANG=C; export LC_ALL=C; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then python -c "import sys; print(sys.getfilesystemencoding())"; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then eval python $PYARGS -m coverage run --branch setup.py test; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then eval python -m codecov; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then export LANG=en_US.UTF-8; export LC_ALL=en_US.UTF-8; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then python -c "import sys; print(sys.getfilesystemencoding())"; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then eval python $PYARGS -m coverage run --branch setup.py test; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then eval python -m codecov; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then python -m flake8; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$PYVER" == "3" ] && [ "$TRAVIS_PYTHON_VERSION" != "pypy3" ]; then python -m mypy .; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then eval python $PYARGS -m coverage run --branch setup.py test; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then eval python -m codecov; fi
